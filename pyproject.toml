[tool.poetry]
name = "score-analysis"
version = "0.2.3"
description = "Library to evaluate models"
authors = [
    "Martins Bruveris <martins.bruveris@gmx.com>",
    "Marian Schneider <marian.schnei@gmail.com>",
    "Jochem Gietema <jochem@giete.ma>",
    "Simon Bozonnet <simon.bozonnet@gmail.com>"
]
readme = "README.md"
packages = [{include = "score_analysis"}]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
numpy = "*"
pandas = "*"
scipy = "*"
tabulate = "*"

# Documentation
enum-tools = { version = "*", optional = true }
sphinx = { version = "^4.4.0", optional = true }
sphinx-rtd-theme = { version = "*", optional = true }
sphinx-toolbox = { version = "^2.0.0", optional = true }

# Jupyter
jupyter = { version = "*", optional = true }
matplotlib = { version = "*", optional = true }
seaborn = { version = "*", optional = true }
tqdm = { version = "*", optional = true }

[tool.poetry.dev-dependencies]
bumpversion = "*"
pytest = "*"
pytest-cov = "*"
ruff = "*"
taskipy = "^1.13"

[tool.poetry.extras]
# To compile documentation
docs = ["enum-tools", "sphinx", "sphinx-rtd-theme", "sphinx-toolbox"]
# To work with jupyter notebooks
jupyter = ["jupyter", "matplotlib", "seaborn", "tqdm"]

[tool.taskipy.tasks]
bumpversion = "poetry run bumpversion patch && git push && git push --tags"
check-style = { cmd = "ruff format --diff . && ruff check .", help = "Check style."}
format = { cmd = "ruff format . && ruff check --fix .", help = "Format code."}
docs-build = "sphinx-build docs docs/_build/html"
docs-server = "sphinx-autobuild docs docs/_build/html --open-browser --watch=score_analysis/"

[tool.ruff]
target-version = "py312"
line-length = 88
lint = { select = ["E", "F", "I"] }


[tool.coverage.run]
omit = ["score_analysis/experimental/*"]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

